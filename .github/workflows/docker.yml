name: Docker build

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Docker Compose
      run: sudo apt-get install docker-compose

    - name: Build and run Docker Compose
      run: docker-compose up -d --build

    - name: Wait for MySQL
      run: |
        sudo apt-get install -y mysql-client
        until mysqladmin ping -h "127.0.0.1" --silent; do
          echo "Waiting for MySQL..."
          sleep 1
        done

    - name: List containers
      run: docker ps

    - name: Run migrations
      run: |
          CONTAINER_ID=$(docker ps -qf "name=sqs-application_web_1")
          docker exec $CONTAINER_ID sh -c "cd src && python manage.py migrate"

    - name: Setup User 
      run: |
          CONTAINER_ID=$(docker ps -qf "name=sqs-application_web_1")
          docker exec $CONTAINER_ID sh -c "cd src && python manage.py createsuperuser --noinput --username docker --email raphael.wudy@stud.th-rosenheim.de"
    
    - name: Set auth token 
      run: |
          CONTAINER_ID=$(docker ps -qf "name=sqs-application_web_1")
          CMD_OUTPUT=$(docker exec $CONTAINER_ID sh -c "cd src && python manage.py drf_create_token docker")
          TOKEN=$(echo "$CMD_OUTPUT" | awk '{print $3}')
          echo "$TOKEN"
          
          sed -i 's/TOKEN_UNIT_TEST=123/TOKEN_UNIT_TEST=$TOKEN/g' docker-compose.yaml

    - name: Starte Docker Compose neue Env
      run: docker-compose up -d


    - name: Print environment variables
      run: |
           env

    - name: Run migrations and tests
      run: |
          CONTAINER_ID=$(docker ps -qf "name=sqs-application_web_1")
          docker exec $CONTAINER_ID sh -c "cd src && python manage.py test --verbosity=2"

    - name: Tear down Docker Compose
      if: always()
      run: docker-compose down
